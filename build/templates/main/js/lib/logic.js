"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/** File generated by Grunt -- do not modify
 *  JQUERY-FORM-VALIDATOR
 *
 *  @version 2.3.77
 *  @website http://formvalidator.net/
 *  @author Victor Jonsson, http://victorjonsson.se
 *  @license MIT
 */
!function (a, b) {
  "function" == typeof define && define.amd ? define(["jquery"], function (a) {
    return b(a);
  }) : "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = b(require("jquery")) : b(a.jQuery);
}(undefined, function (a) {
  !function (a) {
    "use strict";
    a.formUtils.registerLoadedModule("logic");var b = function b(_b, c) {
      var d = function d() {
        var c = a(this),
            d = c.valAttr("depends-on") || c.valAttr("if-checked");if (d) {
          var f = a.formUtils.getValue('[name="' + d + '"]', _b),
              g = a.split(c.valAttr("depends-on-value"), !1, !1),
              h = !f || g.length && !e(f, g);h && c.valAttr("skipped", "1");
        }
      },
          e = function e(b, c) {
        var d = !1,
            e = b.toLocaleLowerCase();return a.each(c, function (a, b) {
          if (e === b.toLocaleLowerCase()) return d = !0, !1;
        }), d;
      },
          f = function f() {
        var b = a(this),
            d = a.formUtils.getValue(b),
            e = b.valAttr("depending-value");a.each(this.dependingInputs, function (b, f) {
          var g = !!a.formUtils.getValue(f),
              h = !d || e && e !== d;h && !g && a.formUtils.dialogs.removeInputStylingAndMessage(f, c);
        });
      };_b.find("[data-validation-depends-on]").off("beforeValidation", d).on("beforeValidation", d).each(function () {
        var c = a(this);_b.find('[name="' + c.valAttr("depends-on") + '"]').each(function () {
          a(this).off("change", f).on("change", f).valAttr("depending-value", c.valAttr("depends-on-value")), this.dependingInputs = this.dependingInputs || [], this.dependingInputs.push(c);
        });
      });
    },
        c = function c(b, _c) {
      var d = function d() {
        var c = a(this),
            d = c.valAttr("optional-if-answered"),
            e = !1,
            f = !!a.formUtils.getValue(c);f || (a.each(a.split(d), function (c, d) {
          var f = b.find('[name="' + d + '"]');if (e = !!a.formUtils.getValue(f)) return !1;
        }), e && c.valAttr("skipped", 1));
      },
          e = function e() {
        var d = a(this),
            e = d.valAttr("optional-if-answered");a.each(a.split(e), function (d, e) {
          var f = b.find('[name="' + e + '"]'),
              g = !!a.formUtils.getValue(f);g || a.formUtils.dialogs.removeInputStylingAndMessage(f, _c);
        });
      };b.find("[data-validation-optional-if-answered]").off("beforeValidation", d).on("beforeValidation", d).each(function () {
        a(this).off("change", e).on("change", e);
      });
    };a.formUtils.$win.bind("validatorsLoaded formValidationSetup", function (d, e, f) {
      e || (e = a("form")), b(e, f), c(e, f);
    });
  }(a);
});